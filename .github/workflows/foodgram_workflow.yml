name: foodgram_workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-return
        cd backend/api_foodgram/
        pip install -r requirements.txt
        cd ..

    - name: Test with flake8
      run: |
        python -m flake8
        cd ..
    
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1  

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push foodgram_backend
      uses: docker/build-push-action@v2
      with:
        context: backend/api_foodgram/
        push: true
        no-cache: true
        tags: danilovkzn/foodgram_backend:ver.1.0.8
    
    - name: Build and push foodgram_frontend
      uses: docker/build-push-action@v2
      with:
        context: frontend/
        push: true
        no-cache: true
        tags: danilovkzn/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ROOT: ~/foodgram
    needs: build_and_push_to_docker_hub
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: copy config files for docker end nginx via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        passphrase: ${{ secrets.PASSPHRASE }}
        key: ${{ secrets.SSH_KEY }}
        target: ${{ env.PROJECT_ROOT }}
        source: 'infra/docker-compose.yml, infra/nginx.conf'

    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker pull danilovkzn/foodgram_backend:ver.1.0.8
          sudo docker pull danilovkzn/foodgram_frontend:latest
          sudo docker-compose stop
          sudo docker-compose rm backend
          sudo docker-compose rm frontend
          sudo systemctl stop nginx
          cd foodgram/
          cd infra/
          # rm .env
          # touch .env
          # echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          # echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          # echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          # echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          # echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          # echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          # echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          # echo HOSTS=${{ secrets.HOSTS }} >> .env
          sudo docker-compose up -d --build

# ПОТРАЧЕНО (бесплатные часы за июнь)
  # send_message:
  #   runs-on: ubuntu-latest
  #   needs: deploy
  #   steps:
  #   - name: send message
  #     uses: appleboy/telegram-action@master
  #     with:
  #       to: ${{ secrets.TELEGRAM_TO }}
  #       token: ${{ secrets.TELEGRAM_TOKEN }}
  #       message: Ну что, Животное, твой ${{ github.workflow }} успешно выполнен!:)
